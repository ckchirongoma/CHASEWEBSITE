Chase Continental Website Implementation Specification

This document outlines a complete, unambiguous specification for the Chase Continental
website, an African AI-driven automation and digital transformation consultancy. The site will
feature an Apple/Burberry-inspired minimal aesthetic with glass-like transparency effects, toptier UX, and clear branding. All features below are designed for seamless execution in Cursor.

Overview

Chase Continental’s mission is to close the technology gap between SMEs and large
corporations by providing accessible, affordable, personalized AI and web automation
solutions. The website’s user journey will be consultative, guiding visitors from awareness to a
sales call. Key features include a hero banner that communicates the mission, service overview, a
gallery of interactive prototypes (each with a demo video + screenshots), client
logos/testimonials, an insights blog, and a conversational AI chatbot that qualifies leads and
routes them to a Calendly booking. The design will use ample white space and a sophisticated
neutral palette (whites, blacks, greys, soft blues/beiges) to create a luxurious, modern feel .
Typography will be clear and hierarchical, using clean sans-serifs for body text and bolded
headings. The user interface will incorporate subtle glassmorphism (semi-transparent panels,
blurred backgrounds) and smooth micro-interactions (hover effects, skeleton loading screens) to
convey an Apple-quality polish.

Brand Voice & Tone: Consultative, expert, yet approachable. Copy should sound
knowledgeable and supportive. Avoid jargon without explanation; use short paragraphs and clear
headings. The tone is optimistic (“empowering SMEs”, “world-class automation for everyone”)
and confident.

Site Structure & Navigation
• Header: A sticky top navigation bar with logo (left) and menu items (right): Home, About,
Services, Prototypes, Clients, Insights, Contact. On mobile, a hamburger menu expands these
links. Include a “Skip to main content” link at the very top for accessibility . Use a semantic
<nav> element (implied role="navigation") for the menu . The logo links to “Home”.
• Footer: At the bottom of every page, include: secondary navigation (duplicate of main links or
major sections), legal links (“Privacy Policy,” “Terms of Use”, “Accessibility”), and contact info

(email, phone). Keep this minimal with small font, high contrast. Include social icons only if
applicable.
• Color Palette: Use a neutral scheme. Backgrounds white or light gray; text charcoal/black for
high contrast . Accents in a rich blue (#1A4F7A or similar) for links/buttons (blue conveys
trust/professionalism ). For a subtle luxury accent, a warm beige or very light cream can be used
sparingly (e.g. behind glass-panels) . All colors must meet WCAG contrast (4.5:1 for text).
• Typography: Choose a clean sans-serif (e.g. system font stack: -apple-system,
BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif). Headings should be significantly
larger/bolder than body . Example scale: H1 ~ 42-48px, H2 ~ 32px, H3 ~ 24px; body text ~
16px. Use heavier weight (700+) for headings, normal weight (400-500) for body. Line height
~1.5 for readability. Use CSS variables or theme file for consistent font sizes and weights.
• Layout: Use a 12-column grid (e.g. Tailwind or CSS Grid) to align content. Generous
padding/margins (e.g. 80px top/bottom on large sections, 24-40px between elements) to ensure
breathing space . Sections should have clear boundaries, often by alternating background colors
(white/light gray) or a translucent overlay with a blurred background image.

Pages and Content

Homepage
• Hero Section: Full-width background (could be a static abstract artwork or blurred office
image) overlaid with a semi-transparent glass panel.
• Heading: “Closing the AI Gap for Africa’s SMEs”.
• Subheading: “World-class automation made accessible, affordable, and personalized.”
• Body: 2–3 sentences: e.g. “At Chase Continental, we empower small and medium businesses
with the same AI-driven tools that big enterprises use. Our mission is to bridge the technology
divide and help you automate smarter, not harder.”
• CTA Button: “Request a Free Consultation” (primary style, in brand accent color). This button
scrolls to Contact/Chat section.
• Image: If an illustration/photo is used, name it hero_banner.jpg, representing a professional
scenario (e.g. someone using a tablet or abstract tech graphic). Ensure alt text like “Abstract
digital network illustrating AI automation.”
• Mission Brief (below fold): A 3-column grid summarizing three key value props with icons:

1. “Affordable AI Solutions” – “High-end automation without high-end costs.” Icon: a wallet or
coin symbol.
2. “Customized for You” – “Tailored automation that fits your unique business.” Icon: a gear or
custom puzzle piece.
3. “End-to-End Support” – “From strategy to implementation and beyond.” Icon: a headset or
handshake.
(Icons named icon_affordable.svg, icon_custom.svg, icon_support.svg).
• Prototype Teaser: A horizontally scrolling carousel (or grid) showing 3 featured prototypes
with brief captions. Each item shows the title (e.g. “Automated Invoice Processor”) and a
thumbnail image (e.g. prototype_demo_01.jpg). On hover, overlay “Watch Demo” that opens a
modal/video (see Prototype system below).
• Chatbot Invite: A small callout: “Have questions? Let our AI assistant guide you.” with a chat
icon button that opens the chatbot widget. (This is the same chatbot app used sitewide, see
Chatbot section below.)
• Footer CTA: A final banner before footer: “Ready to transform your business? Book a strategy
call.” with a Calendly link and a button “Schedule a Call” in accent color.

About Page
• Hero/Intro:
• Heading: “About Chase Continental”.
• Subheading/Tagline: “Empowering African businesses through AI and automation.”
• Body: 2–3 paragraphs telling the story: e.g. Chase Continental was founded in [Year] to solve
the problem of small businesses being left behind by rapidly advancing tech. Emphasize mission
to democratize automation. Tone: professional but passionate.
• Image: Founder/team photo or office shot (about_team.jpg). If showing people, ensure it’s
generic (no known faces) or blurred enough. Alt: “Chase Continental leadership team discussing
strategy.”
• Values/Approach:
• Use two or three side-by-side cards or sections. Each has a small heading (bold) and a
paragraph. Example topics: “Consultative Approach” (“We listen to your business goals before

designing solutions.”), “Cutting-Edge Expertise” (“Our team stays ahead of AI trends to give
you the best tools.”), “Local Focus” (“We understand the African SME landscape.”).
• Icons or small graphics (icon_consulting.svg, icon_ai.svg, icon_africa.svg).
• Team (optional): If relevant, show brief bios of key people with photo thumbnails
(team_<name>.jpg) and role. Alt text: “[Name], [Role].” Possibly link LinkedIn.

Services Page
• Overview: A short intro paragraph: “Our AI & Automation Services”.
• Service Sections: Break down main services into either a vertical list or grid. Each service with
an icon/image on left and text on right (or vice versa). Examples:
1. AI Consulting & Strategy – helping define automation roadmap.
2. Process Automation – web scraping, RPA, workflows.
3. Custom Web Apps – SaaS tools, dashboards, front-ends.
4. Chatbots & Integrations – AI chat, voice, API integration.
5. Training & Support – teach your team to use and extend the tools.
(Use images like service_consulting.jpg, or vector icons icon_AI.svg, etc.)
Each section: Heading, 2–3 descriptive sentences, bullet list of sub-capabilities if needed. Tone:
confidence in solving “pain points”.
• Callouts: Between sections, highlight key quotes or stats, e.g. “95% of our clients double
efficiency within 6 months.” (This can be static text, no citation needed if fictional.) Style as a
large centered banner.

Prototype Gallery Page
• Purpose: Showcase interactive demos to prove competence.
• Structure: A filterable grid or list of prototype projects. Each entry has:
• Title (e.g. “Smart Survey Bot”),

• Subtitle (one-liner description),
• Thumbnail (the first screenshot; e.g. prototype01_screen1.jpg),
• “Watch Demo” button linking to a detail page or modal.
• Detail View (per prototype): When clicked, show a detail panel or page with:
• A video player embedding the demo video (MP4) – file named prototype01_demo.mp4. It
should autoplay muted thumbnail on hover in the list, but on detail it’s playable with controls.
• A brief description of the prototype’s function and impact (1–2 paragraphs).
• A carousel of 3 screenshots: prototype01_screen1.jpg, prototype01_screen2.jpg,
prototype01_screen3.jpg. Each has alt text describing what’s visible (e.g. “Dashboard showing
automated analytics”).
• A link or button to return to gallery.
• Content: Titles and descriptions should use a confident tone: explain what problem it solves.
For example, “Invoice AutoCat – Automates data entry from vendor invoices into your
accounting system.” No marketing fluff; focus on functionality.
• Image Naming Convention: For each prototype, use a numeric or slug-based ID consistently.
Example:
/prototypes/
prototype01/
prototype01_demo.mp4
prototype01_screen1.jpg
prototype01_screen2.jpg
prototype01_screen3.jpg
prototype02/
prototype02_demo.mp4
prototype02_screen1.jpg
...

This structure can be in the repo or a cloud storage. The site’s build script or CMS (e.g. Airtable)
will automatically ingest all prototypes/*/* files.

• Auto-Update Workflow: Provide an admin interface or instructions: to add a new prototype,
upload one MP4 (optimally <50MB) and three JPGs into a new folder named with the next ID or
slug. The front-end should dynamically list all subfolders of /prototypes. (If using Airtable, each
record has attachments with matching names.)

Clients Page
• Heading: “Our Clients & Partners”. Subtext: “Trusted by organizations across industries.”
• Logo Grid: Display client logos in a centered grid (lightbox hover effect optional). Use
consistent style: ideally grayscale PNGs of equal width. Naming: client_logo_01.png,
client_logo_02.png, etc. Alt text: “[Company Name] logo”. E.g. “Acme Corp logo”. Keep
background white/transparent.
• Testimonials/Case Studies (optional): If available, include 1–3 short quotes from clients or a
brief case study link. Each with a small photo or logo, quote text in italics, and citation. E.g.
“Chase Continental helped us automate 80% of our sales pipeline” – CEO of XYZ. These build
credibility.
• Visual: If no logos, use abstract trust-building image (clients_network.jpg) showing a network
or partnership. Alt: “Graphic of connected dots representing our client network.”

Articles / Insights (Blog)
• Listing Page: Title: “Insights”. Grid or list of article summaries (card with image, title,
snippet). Fields for each post: date, title, image (insight_<slug>.jpg), excerpt (30 words). Use
categories/tags like “AI”, “Automation”, “SME Growth”.
• Article Page:
• Title (H1), author, date.
• Content: Rich text with subheadings. Write in an informative, authoritative style. Topics might
include case studies, how-to guides, industry trends. Example post: “3 Ways Automation Can
Save African SMEs Time and Money.” Body ~800–1500 words with images/graphics inline.
• Images: use relevant stock photos or graphics (naming: insight_example1.jpg). Alt text
describes the image content.
• Share buttons (LinkedIn, Twitter).

Contact Page
• Contact Form/Info: A simple form: Name (text), Company, Email, Phone (optional), Message
(textarea). Labels above fields (for screen readers). A submit button “Send Message” in accent
color. On submit, send email to sales@example.com or use service. Include a note about
response time.

• Calendly Section: Beside or below the form, embed a Calendly widget (provided by
Calendly’s embed code) or a big button “Schedule a 15-min Call” linking to a Calendly booking
URL.
• Chatbot Prompt: An invitation: “Not sure where to start? Chat with us.” That activates the AI
chatbot sidebar.
• Map/Address (if physical office): Show address and an embedded Google Map.

AI Chatbot Integration
• Purpose: The chatbot will appear on all pages (e.g. as a fixed chat icon in bottom-right). It
answers basic FAQs about services, and qualifies leads by asking contextual questions, then
offers to schedule a call.
• Appearance & Behavior: Use a modern chat widget (React component or third-party like
Landbot or Microsoft Bot Framework). It should have a typewriter text effect when the bot
“speaks” (character-by-character reveal) , with a blue typing indicator (animated dots or cursor)
to mimic ChatGPT/Perplexity style. The indicator can be a blue pill or ellipsis in a speech
bubble.
• Training Knowledge Base: The bot’s responses must reflect Chase Continental’s values and
services. Include up-to-date info on: mission (closing tech gap), service offerings, example
success stories, what industries served. Use a combination of hard-coded FAQs and AI (e.g.
GPT-4 with fine-tuned prompts or embeddings).
• Conversation Flow / Lead Qualification: The bot should:
1. Greet the user casually (e.g. “Hi! I’m ChaseBot 🤖. How can I help?”).
2. Ask about business pain points: e.g. “What’s the biggest challenge your business is facing?”
Provide quick reply buttons (e.g. “Need automation”, “Need cost savings”, “Other”).
3. For interested leads, ask context: industry, company size, timeline, etc. Use branching logic to
gauge fit (align with BANT or MEDDIC frameworks ).
4. If lead qualifies (e.g. clear pain, budget range mentioned), prompt: “Would you like to book a
free strategy call?” and provide a Calendly link/button inside chat.
5. If not ready, offer valuable content or to leave contact.
• Integration: On meeting ask, embed Calendly by giving a link or using Calendly’s chatbot
integration . The bot can either post a hyperlink or (if available) inline scheduler.

• Style & Microcopy: Conversational, helpful, concise. Use the brand’s voice. Example lines:
“Tell me a bit about your company,” “I understand. Many clients in [industry] face that.” Use
small talk emoji (like 🤖, 🙂) sparingly.
• Accessibility: Ensure the chat widget is keyboard-navigable (can Tab to open/close, focus
inside). Provide text transcripts for audio or confirm text alternatives for any images used.

Accessibility & UX Best Practices
• Semantic HTML & ARIA: Use <header>, <main>, <footer>, <nav>, <section>, <article>,
<h1>-<h6>, <p>, etc., to structure content. The main <nav> and footer links get aria-labels
where needed. For example: <nav aria-label="Main navigation"> (though <nav> is implicit
landmark ). Include landmarks and a skip-link as noted.
• Alt Text & Images: Every image must have meaningful alt text or an empty alt (alt="") if
purely decorative . Follow best practices: no phrases like “image of…” . E.g. alt="Graph
showing productivity growth". Keep alt under ~100 characters . If an image conveys important
data, ensure it’s also described in surrounding text.
• Keyboard & Screen Reader: Ensure all interactive elements (links, buttons, form fields, chat
widget) are reachable via Tab. Focus states should be visible (outline or underline). Form labels
should be explicitly associated (<label for>).
• ARIA Roles: Only use ARIA roles/states when necessary. For example, use role="status" for
live chat typing notifications so screen readers announce updates. For the chatbot transcript
region, use role="log" or aria-live="polite" so new messages are read.
• Color & Contrast: Text should be at least 4.5:1 contrast with its background. Use accessible
link/button color contrasts. (Test with tools like Lighthouse or WAVE.)
• Loading States: Use skeleton screens or subtle spinners for asynchronous content (e.g. when
loading the prototype video or fetching blog posts). For example, display gray boxes in place of
text/images while data loads . Nielsen Norman Group notes that skeletons give users a sense of
structure during loading . This improves perceived performance.
• Responsive Design: The layout must adapt to mobile/tablet. Navigation becomes a hamburger
menu on narrow screens. Columns stack vertically on mobile. Images scale (max-width: 100%).
• Microinteractions:
• Hover Effects: Buttons and links lighten or gain a subtle shadow on hover. Prototype
thumbnails slightly enlarge or show an overlay icon. Clients logos can transition to color on
hover.

• Transitions: Use smooth 150–300ms transitions for hover and focus states. Use eased
animations for expansions (e.g. prototypes carousel).
• Reduced Motion: Respect prefers-reduced-motion: if set, disable non-essential
animations/transitions.
• Forms: Form inputs should have clear placeholders or labels, visible error messages, and
validation.
• Typography Hierarchy: Headings must descend logically (H1 only once, followed by H2,
etc.). This helps screen readers understand structure. Text sizes should reflect importance .
• Navigation Order: Ensure that the DOM tab order follows a logical visual order of content.
Skip links ensure keyboard users jump to <main>.

Technical Stack
• Frontend Framework: React (Next.js recommended for SSR/SEO) with TypeScript. Next.js
will handle routing and pre-rendering of pages.
• Styling & Animations: CSS-in-JS (styled-components) or Tailwind CSS for rapid styling. Use
Framer Motion for animations (hero fade-ins, hover animations, skeleton transitions) to ensure
performance and smooth easing.
• CMS/Content Storage: Use Airtable as a headless CMS or database to store content and
assets (Clients, Insights, Prototypes). Each table:
• Prototypes: columns for title, description, video attachment, 3 image attachments.
• Clients: name, logo attachment, optional quote.
• Insights: title, slug, date, excerpt, content (or Contentful/Markdown), image.
• Services: title, content, icon.
APIs: use Airtable’s REST API or GraphQL to fetch. Alternatively, a JSON file for static data if
small.
• Chatbot Backend: Implement the chatbot as a React component using e.g. the OpenAI API
(GPT-4) for flexible answers. Use a lightweight backend (serverless function in Node/Express)
to securely proxy API calls and include custom prompt logic (filtering out unrelated Q’s, etc.).
Maintain a prompt template with the company’s mission and service data embedded. For quicker
setup, a third-party bot builder (Landbot, ManyChat) with Airtable integration is acceptable but
less flexible.

• Database: No heavy DB needed beyond Airtable. If user sign-ups or leads need storing,
integrate with an email/CRM or a simple Google Sheet.
• Hosting/Deployment: Host on Vercel or Netlify (fits Next.js well). Ensure HTTPS/SSL.
• Analytics: Include Google Analytics or Plausible, and Hotjar or similar for UX feedback.
• Third-Party: Calendly embed (JavaScript snippet), FontAwesome or similar icon set, any
needed polyfills (loaded via CDN or bundler).

Visual Design Elements
• Aesthetic: Clean and spacious. Use glassmorphism: translucent white/grey panels with
backdrop-filter: blur(10px) on some overlays (e.g. navigation dropdown, hero text background).
This gives a subtle “frosted glass” feel. Keep it very light; text on top should remain legible.
• Imagery: Use high-quality photos that reflect tech and African business. For product shots,
consider stylized abstract tech patterns or silhouettes. Maintain a cohesive style (either all photos
or all illustrations, not mixed).
• Icons & Graphics: Custom or line-style icons in single-color (matching accent) keep things
minimal. Social media icons (if any) in footer should be outlined.
• Typography: As above, consider a premium look by pairing fonts: e.g. headings in a subtle
serif (Georgia or similar) for elegance, body in sans-serif for clarity. If budget allows, a licensed
type like IBM Plex Sans or Source Sans Pro works well. Ensure font loading is optimized (swap,
subsets).
• Spacing & Layout: Follow an Apple-like hierarchy: large headers, plenty of white space
(padding), and centered sections. Avoid clutter.
• Hover Cursors: Use pointer cursor on clickable elements. On image hover, a slight scale-up
and drop-shadow.
• Animated Elements: On scroll, fade-in sections and slide in content (via Framer Motion’s
viewport features). On navigation toggle, icon morph (hamburger to X).
• Dark/Light Mode: If desired later, design the palette so that light mode is default (consistent
with luxury feel). Dark mode could be all-dark gray with bright accent, but not mandatory if
complexity isn’t required.

Footer & Legal

• Footer Elements:
• Repeat main navigation (Home, About, etc.), and add legal: “Privacy Policy”, “Terms of Use”,
“Cookie Policy”.
• If applicable, social links (LinkedIn icon).
• Copyright line: e.g. “© 2025 Chase Continental. All rights reserved.”
• Ensure each link has a descriptive title attribute (like title="Privacy Policy").
• Privacy/Terms Pages:
• The spec for privacy policy etc. is minimal: it should at least include GDPR notice if targeting
EU, data collection details, contact info. The Footer should link to full pages for Privacy and
Terms. Have a skeletal template page with placeholder text.
• Accessibility Declaration: If required, a note that the site follows WCAG 2.1 and a contact for
accessibility issues can be included in the footer or a separate page linked in footer.

Execution Prompts Checklist for Cursor

Use the following steps in order to build the site in Cursor. Each step can be invoked as a
prompt in Cursor, ensuring dependencies are resolved:
1. Setup Project: “Create a new Next.js (React+TypeScript) project with Framer Motion and
Tailwind CSS integrated. Initialize Git.”
2. Configure Theme & Assets: “Define CSS variables or Tailwind config for the color palette
(white, black, gray, blue accent). Set up global font-stack. Create /assets folders: clients/,
prototypes/, images/.”
3. Build Layout Shell: “Implement a responsive <Header> component with navigation links
(Home, About, Services, Prototypes, Insights, Contact) and logo. Add a sticky <Footer> with
placeholder links. Include skip-link at top and appropriate ARIA labels .”
4. Homepage Structure: “Add hero section: full-width banner, glass overlay with main heading,
subheading, CTA button. Use Framer Motion for fade-in. Below, add a 3-column feature list
(Affordable AI, Personalized, Support).”

5. Prototype Teaser & Clients: “On home, below features, implement a horizontal carousel or
grid of prototype thumbnails (use dummy images). Under that, add a grid of placeholder client
logos named client_logo_01.png, etc.”
6. Services Page: “Create the Services page with sections for each service (Consulting,
Automation, Web Apps, Chatbots, Training). Use a two-column layout with icon/image and text.
Add CTA at bottom.”
7. About Page: “Create About page with mission statement, values sections (icons + text), and a
team section (if needed). Use a centered layout.”
8. Insights (Blog) List: “Set up an Insights page that fetches posts (can use local JSON). Display
a card grid with image, title, date, excerpt for each article.”
9. Insight Article Page: “Implement a dynamic route for individual Insight pages. Use
markdown or rich text. Style headings, paragraphs, images. Ensure responsive images.”
10. Prototypes Gallery: “On Prototypes page, scan /assets/prototypes/ subfolders. For each,
display card with title and thumbnail (screen1.jpg). Clicking opens a modal or navigates to
detail. Detail view shows the video player for demo.mp4 and carousel of the 3 screenshots.”
11. Contact Page: “Build Contact page with form fields (Name, Company, Email, Message) and
submit button. Include embedded Calendly widget or link. Style form with focus states.”
12. Chatbot Integration: “Add chatbot component to all pages (bottom corner). Set up OpenAI
API calls (or a mock). Implement initial greeting and conversation UI with typewriter effect and
blue typing indicator. Program logic to ask business questions and after qualifying, display
Calendly link . Ensure keyboard accessibility.”
13. Airtable/Content Hookup: “Connect to Airtable for Prototypes, Clients, Insights, and
Services. Replace dummy data with API calls. Ensure assets load from Airtable attachments.”
14. Accessibility Audit: “Review all pages for semantic HTML, alt text, labels. Add ARIA
roles/labels where needed. Insert ‘Skip to content’ link. Ensure all text meets contrast ratios .”
15. Polish & Animations: “Add Framer Motion animations: section reveal on scroll, button
hover effects, chat typing animation. Implement skeleton placeholders for data fetches .”
16. Final Review & Deployment: “Run Lighthouse audit: fix any performance, SEO, or
accessibility issues. Update robots, sitemap. Deploy to production (Vercel or similar).”

Follow this plan sequentially. Each Cursor prompt builds on the previous steps, ultimately
producing a fully functioning, polished website per specification.

Sources: Design and UX guidelines referenced from expert resources . These inform our best
practices for whitespace, typography, color, accessibility, and chatbot integration.

